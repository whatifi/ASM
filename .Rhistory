---
title: "TP2"
output: html_document
---
```{r}
dataCancer=read.table("prostate.data",header=TRUE)
data = dataCancer[-ncol(dataCancer)]
pro = as.data.frame(cbind(  data[,1],scale(data[,2:4]),data[,5],scale(data[,6]),data[,7],scale(data[,8:9] ) ))
names(pro) = names(data)
pro
pairs(pro, labels =colnames(dataCancer), pch = 21,bg =c("turquoise"))
```
## R Markdown
Si on analyse l'allure de la distribution des nuages de  points entre lcavol et les autres prédicteurs on peut remarquer que :
```{r }
proC = pro
n = dim(proC)[1]
proC$svi = factor(proC$svi)
proC$gleason = factor(proC$gleason)
lcavol = proC$lcavol
lmLcavol= lm(lcavol ~ . ,data=proC[,-1])
s = summary(lmLcavol)
s
```
## Including Plots
You can also embed plots, for example:
```{r }
proC = pro
n = dim(proC)[1]
proC$svi = factor(proC$svi)
proC$gleason = factor(proC$gleason)
lcavol = proC$lcavol
lmLcavol= lm(lcavol ~ proC$svi+proC$gleason+lweight+age+lbph+pgg45help ,data=proC[,-1])
s = summary(lmLcavol)
s
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
#2e)
t<-qt(1-(0.05/2), 88)
t
```
```{r}
plot(fitted(lmLcavol), data[,1])
y1<-sort.int(fitted(lmLcavol))
y2<-sort.int(data[,1])
plot(1:97,y1, col = "blue")
lines(1:97, y2, col="red")
```
```{r}
hist(lmLcavol$residuals)
```
```{r}
sum(resid(lmLcavol)^2)
```
```{r}
anova <- aov(lcavol ~ factor(svi)*factor(gleason), proC)
model.tables(anova,"means")
summary(anova)
```
```{r}
#part4
lm1<-lm(lcavol~1,data=proC)
lm2<-lm(lcavol~.,data=proC[,c(1,4,9)])
lm3<-lm(lcavol~.,data=proC[,c(1,2,9)])
Combine <- combn(proC[,2:9],2)
Combine[,1]
```
```{r}
RSSmin <- function(k){
if( k == 0 ){
lm1 <- lm(lcavol~1,data=proC)
RSS <- sum(resid(lm1)^2)
return(RSS,k)
}
else{
RSS = 1000000000000000
k = 0
for(i in 1:ncol(Combine)){
lm <- lm(lcavol~., )
RS <- sum(resid(lm)^2)
if(RS < RSS){
RSS = RS
k = i
}
}
return(RSS,k)
}
}
s <- as.data.frame(cbind(Combine[,2][1],Combine[,2][2]))
s
#lm <- lm(lcavol~., s)
#summary(lm)
#resultat <- RSSmin(2)
#resultat[1]
```
---
title: "TP2"
output: html_document
---
```{r}
dataCancer=read.table("prostate.data",header=TRUE)
data = dataCancer[-ncol(dataCancer)]
pro = as.data.frame(cbind(  data[,1],scale(data[,2:4]),data[,5],scale(data[,6]),data[,7],scale(data[,8:9] ) ))
names(pro) = names(data)
pro
pairs(pro, labels =colnames(dataCancer), pch = 21,bg =c("turquoise"))
```
## R Markdown
Si on analyse l'allure de la distribution des nuages de  points entre lcavol et les autres prédicteurs on peut remarquer que :
```{r }
proC = pro
n = dim(proC)[1]
proC$svi = factor(proC$svi)
proC$gleason = factor(proC$gleason)
lcavol = proC$lcavol
lmLcavol= lm(lcavol ~ . ,data=proC[,-1])
s = summary(lmLcavol)
s
```
## Including Plots
You can also embed plots, for example:
```{r }
proC = pro
n = dim(proC)[1]
proC$svi = factor(proC$svi)
proC$gleason = factor(proC$gleason)
lcavol = proC$lcavol
lmLcavol= lm(lcavol ~ proC$svi+proC$gleason+lweight+age+lbph+pgg45help ,data=proC[,-1])
s = summary(lmLcavol)
s
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
#2e)
t<-qt(1-(0.05/2), 88)
t
```
```{r}
plot(fitted(lmLcavol), data[,1])
y1<-sort.int(fitted(lmLcavol))
y2<-sort.int(data[,1])
plot(1:97,y1, col = "blue")
lines(1:97, y2, col="red")
```
```{r}
hist(lmLcavol$residuals)
```
```{r}
sum(resid(lmLcavol)^2)
```
```{r}
anova <- aov(lcavol ~ factor(svi)*factor(gleason), proC)
model.tables(anova,"means")
summary(anova)
```
```{r}
#part4
lm1<-lm(lcavol~1,data=proC)
lm2<-lm(lcavol~.,data=proC[,c(1,4,9)])
lm3<-lm(lcavol~.,data=proC[,c(1,2,9)])
Combine <- combn(proC[,2:9],2)
Combine[,1]
```
```{r}
RSSmin <- function(k){
if( k == 0 ){
lm1 <- lm(lcavol~1,data=proC)
RSS <- sum(resid(lm1)^2)
return(RSS,k)
}
else{
RSS = 1000000000000000
k = 0
for(i in 1:ncol(Combine)){
lm <- lm(lcavol~., )
RS <- sum(resid(lm)^2)
if(RS < RSS){
RSS = RS
k = i
}
}
return(RSS,k)
}
}
s <- as.data.frame(cbind(Combine[,2][1],Combine[,2][2]))
s
#lm <- lm(lcavol~., s)
#summary(lm)
#resultat <- RSSmin(2)
#resultat[1]
```
dataCancer=read.table("prostate.data",header=TRUE)
data = dataCancer[-ncol(dataCancer)]
pro = as.data.frame(cbind(  data[,1],scale(data[,2:4]),data[,5],scale(data[,6]),data[,7],scale(data[,8:9] ) ))
names(pro) = names(data)
pro
pairs(pro, labels =colnames(dataCancer), pch = 21,bg =c("turquoise"))
cor(pro$age, pro$lbph,use="complete.obs")
0.3501859
0.3501859
cor(pro$age, pro$svi,use="complete.obs")
cor(pro$age, pro$lcp,use="complete.obs")
cor(pro$age, pro$gleason,use="complete.obs")
cor(pro$age, pro$pgg45,use="complete.obs")
cor(pro$age, pro$lpsa,use="complete.obs")
cor(pro$age, pro$svi,use="complete.obs")
cor(pro$age, pro$lcp,use="complete.obs")
cor(pro$lbph, pro$svi,use="complete.obs")
cor(pro$lbph, pro$lcp,use="complete.obs")
cor(pro$lbph, pro$gleason,use="complete.obs")
cor(pro$lbph, pro$pgg45,use="complete.obs")
cor(pro$lbph, pro$lpsa,use="complete.obs")
cor(pro$lbph, pro$lcp,use="complete.obs")
cor(pro$svi, pro$lcp,use="complete.obs")
cor(pro$svi, pro$gleason,use="complete.obs")
cor(pro$svi, pro$pgg45,use="complete.obs")
cor(pro$svi, pro$lpsa,use="complete.obs")
cor(pro$lcp, pro$gleason,use="complete.obs")
cor(pro$lcp, pro$pgg45,use="complete.obs")
cor(pro$lcp, pro$lpsa,use="complete.obs")
cor(pro$gleason, pro$pgg45,use="complete.obs")
cor(pro$gleason, pro$lpsa,use="complete.obs")
cor(pro$pgg45, pro$lpsa,use="complete.obs")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("Correla9predicteurs.png")
?knitr
??knitr
include_graphics("Correla9predicteurs.png")
knitr::include_graphics("Correla9predicteurs.png")
knitr::include_graphics("Correla9predicteurs.png")
